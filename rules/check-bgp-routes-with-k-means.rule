iceberg {
    topic bgp {
        description "This topic is to monitor bgp details";
        synopsis bgp;
        rule check-bgp-routes-with-k-means {
            keys neighbor-address;
            sensor oc {
                open-config {
                    sensor-name /network-instances/network-instance/protocols/protocol/bgp;
                    frequency 20s;
                }
            }
            field neighbor-address {
                sensor oc {
                    where "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/@neighbor-address =~ /{{neighbors}}/";
                    path "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/@neighbor-address";
                }
                type string;
                description "BGP neighbor addresses to monitor";
            }
            field received-routes {
                sensor oc {
                    path /network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/state/prefixes/received;
                }
                type integer;
                description "Number of received routes";
            }
            field received-routes-k-means {
                formula {
                    dynamic-threshold {
                        algorithm k-means;
                        learning-period 6d;
                        pattern-periodicity 1m;
                        field-name "$received-routes";
                    }
                }
                type integer;
            }
            trigger received-routes-k-means {
                frequency 30s;
                term need-more-datapoints {
                    when {
                        matches-with "$received-routes-k-means" -1;
                    }
                    then {
                        status {
                            color yellow;
                            message "need more datapoints. wait the end of the learning period";
                        }
                    }
                }
                term anormal {
                    when {
                        matches-with "$received-routes-k-means" 1;
                    }
                    then {
                        status {
                            color red;
                            message "Number of routes received is anormal ";
                        }
                    }
                }
                term normal {
                    when {
                        matches-with "$received-routes-k-means" 0;
                    }
                    then {
                        status {
                            color green;
                            message "Number of routes received is normal ";
                        }
                    }
                }
            }
            variable neighbors {
                value .*;
                description "BGP neighbor addresses to monitor, regular expression, e.g. '172.16.*'";
                type string;
            }
        }
    }
}


